import imageio


import matplotlib.pyplot as pp

import matplotlib.patches as patches


from skimage import color, img_as_float, exposure, filters, measure


import numpy as np


charmander = imageio.imread('charmander.jpg')


charmander_gray = color.rgb2gray(img_as_float(charmander))


print(f'\nRgb shape {charmander.shape}, size {len(charmander)} and type {charmander.dtype}\n')

print(
    f'Gray shape {charmander_gray.shape}, size {len(charmander_gray)} and type {charmander_gray.dtype}', end='\n' * 2
)


charmander_hist = exposure.equalize_hist(charmander_gray)


otsu_threshold = filters.threshold_otsu(charmander_hist)

print(f'Otsu threshold {otsu_threshold}', end='\n\n')

charmander_segmented = charmander_hist > otsu_threshold


charmander_label = measure.label(charmander_segmented)


fig, ax = pp.subplots(figsize=(10,6))

ax.imshow(charmander, cmap='gray') 

ax.set_title('Charmander')

ax.axis('off')

for region in measure.regionprops(charmander_label):

    if region.area > 50:
        minr, minc, maxr, maxc = region.bbox

        rect = patches.Rectangle((minc, minr), maxc - minc, maxr - minr,
                                 fill=False, edgecolor='blue')

        ax.add_patch(rect)

pp.show()
